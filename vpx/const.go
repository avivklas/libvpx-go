// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Thu, 07 Jan 2016 19:56:58 MSK.
// By http://git.io/cgogen. DO NOT EDIT.

package vpx

/*
#cgo pkg-config: vpx
#include <vpx/vp8cx.h>
#include <vpx/vp8dx.h>
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"

const (
	// Vp8EflagNoRefLast as defined in vpx-1.5.0/vp8cx.h:67
	Vp8EflagNoRefLast = (1 << 16)
	// Vp8EflagNoRefGf as defined in vpx-1.5.0/vp8cx.h:76
	Vp8EflagNoRefGf = (1 << 17)
	// Vp8EflagNoRefArf as defined in vpx-1.5.0/vp8cx.h:85
	Vp8EflagNoRefArf = (1 << 21)
	// Vp8EflagNoUpdLast as defined in vpx-1.5.0/vp8cx.h:93
	Vp8EflagNoUpdLast = (1 << 18)
	// Vp8EflagNoUpdGf as defined in vpx-1.5.0/vp8cx.h:101
	Vp8EflagNoUpdGf = (1 << 22)
	// Vp8EflagNoUpdArf as defined in vpx-1.5.0/vp8cx.h:109
	Vp8EflagNoUpdArf = (1 << 23)
	// Vp8EflagForceGf as defined in vpx-1.5.0/vp8cx.h:117
	Vp8EflagForceGf = (1 << 19)
	// Vp8EflagForceArf as defined in vpx-1.5.0/vp8cx.h:125
	Vp8EflagForceArf = (1 << 24)
	// Vp8EflagNoUpdEntropy as defined in vpx-1.5.0/vp8cx.h:133
	Vp8EflagNoUpdEntropy = (1 << 20)
	// CodecABIVersion as defined in vpx-1.5.0/vpx_codec.h:86
	CodecABIVersion = (3 + ImageABIVersion)
	// CodecCapDecoder as defined in vpx-1.5.0/vpx_codec.h:154
	CodecCapDecoder = 0x1
	// CodecCapEncoder as defined in vpx-1.5.0/vpx_codec.h:155
	CodecCapEncoder = 0x2
	// ImageABIVersion as defined in vpx-1.5.0/vpx_image.h:31
	ImageABIVersion = (3)
	// ImageFormatPlanar as defined in vpx-1.5.0/vpx_image.h:34
	ImageFormatPlanar = 0x100
	// ImageFormatUvFlip as defined in vpx-1.5.0/vpx_image.h:35
	ImageFormatUvFlip = 0x200
	// ImageFormatHasAlpha as defined in vpx-1.5.0/vpx_image.h:36
	ImageFormatHasAlpha = 0x400
	// ImageFormatHighbitdepth as defined in vpx-1.5.0/vpx_image.h:37
	ImageFormatHighbitdepth = 0x800
	// PlanePacked as defined in vpx-1.5.0/vpx_image.h:111
	PlanePacked = 0
	// PlaneY as defined in vpx-1.5.0/vpx_image.h:112
	PlaneY = 0
	// PlaneU as defined in vpx-1.5.0/vpx_image.h:113
	PlaneU = 1
	// PlaneV as defined in vpx-1.5.0/vpx_image.h:114
	PlaneV = 2
	// PlaneAlpha as defined in vpx-1.5.0/vpx_image.h:115
	PlaneAlpha = 3
	// TsMaxPeriodicity as defined in vpx-1.5.0/vpx_encoder.h:37
	TsMaxPeriodicity = 16
	// TsMaxLayers as defined in vpx-1.5.0/vpx_encoder.h:40
	TsMaxLayers = 5
	// MaxLayers as defined in vpx-1.5.0/vpx_encoder.h:46
	MaxLayers = 12
	// SsMaxLayers as defined in vpx-1.5.0/vpx_encoder.h:52
	SsMaxLayers = 5
	// SsDefaultLayers as defined in vpx-1.5.0/vpx_encoder.h:55
	SsDefaultLayers = 1
	// EncoderABIVersion as defined in vpx-1.5.0/vpx_encoder.h:65
	EncoderABIVersion = (5 + CodecABIVersion)
	// CodecCapPsnr as defined in vpx-1.5.0/vpx_encoder.h:77
	CodecCapPsnr = 0x10000
	// CodecCapOutputPartition as defined in vpx-1.5.0/vpx_encoder.h:84
	CodecCapOutputPartition = 0x20000
	// CodecCapHighbitdepth as defined in vpx-1.5.0/vpx_encoder.h:88
	CodecCapHighbitdepth = 0x40000
	// CodecUsePsnr as defined in vpx-1.5.0/vpx_encoder.h:97
	CodecUsePsnr = 0x10000
	// CodecUseOutputPartition as defined in vpx-1.5.0/vpx_encoder.h:98
	CodecUseOutputPartition = 0x20000
	// CodecUseHighbitdepth as defined in vpx-1.5.0/vpx_encoder.h:100
	CodecUseHighbitdepth = 0x40000
	// FrameIsKey as defined in vpx-1.5.0/vpx_encoder.h:129
	FrameIsKey = 0x1
	// FrameIsDroppable as defined in vpx-1.5.0/vpx_encoder.h:130
	FrameIsDroppable = 0x2
	// FrameIsInvisible as defined in vpx-1.5.0/vpx_encoder.h:133
	FrameIsInvisible = 0x4
	// FrameIsFragment as defined in vpx-1.5.0/vpx_encoder.h:135
	FrameIsFragment = 0x8
	// ErrorResilientDefault as defined in vpx-1.5.0/vpx_encoder.h:145
	ErrorResilientDefault = 0x1
	// ErrorResilientPartitions as defined in vpx-1.5.0/vpx_encoder.h:147
	ErrorResilientPartitions = 0x2
	// EflagForceKf as defined in vpx-1.5.0/vpx_encoder.h:292
	EflagForceKf = (1 << 0)
	// DlRealtime as defined in vpx-1.5.0/vpx_encoder.h:898
	DlRealtime = (1)
	// DlGoodQuality as defined in vpx-1.5.0/vpx_encoder.h:900
	DlGoodQuality = (1000000)
	// DlBestQuality as defined in vpx-1.5.0/vpx_encoder.h:902
	DlBestQuality = (0)
)

// RcMode as declared in vpx-1.5.0/vpx_encoder.h:261
type RcMode uint

// RcMode enumeration from vpx-1.5.0/vpx_encoder.h:261
const (
	Vbr = 0
	Cbr = C.VPX_CBR
	Cq  = C.VPX_CQ
	Q   = C.VPX_Q
)

// ColorRange as declared in vpx-1.5.0/vpx_image.h:85
type ColorRange uint

// ColorRange enumeration from vpx-1.5.0/vpx_image.h:85
const (
	CrStudioRange ColorRange = C.VPX_CR_STUDIO_RANGE
	CrFullRange   ColorRange = C.VPX_CR_FULL_RANGE
)

// BitDepth as declared in vpx-1.5.0/vpx_codec.h:223
type BitDepth uint

// BitDepth enumeration from vpx-1.5.0/vpx_codec.h:223
const (
	Bits8  BitDepth = C.VPX_BITS_8
	Bits10 BitDepth = C.VPX_BITS_10
	Bits12 BitDepth = C.VPX_BITS_12
)

// ScalingModeType as declared in vpx-1.5.0/vp8cx.h:568
type ScalingModeType uint

// ScalingModeType enumeration from vpx-1.5.0/vp8cx.h:568
const (
	Vp8eNormal    ScalingModeType = C.VP8E_NORMAL
	Vp8eFourfive  ScalingModeType = C.VP8E_FOURFIVE
	Vp8eThreefive ScalingModeType = C.VP8E_THREEFIVE
	Vp8eOnetwo    ScalingModeType = C.VP8E_ONETWO
)

// ColorSpace as declared in vpx-1.5.0/vpx_image.h:79
type ColorSpace uint

// ColorSpace enumeration from vpx-1.5.0/vpx_image.h:79
const (
	ColorSpaceUnknown  ColorSpace = C.VPX_CS_UNKNOWN
	ColorSpaceBt601    ColorSpace = C.VPX_CS_BT_601
	ColorSpaceBt709    ColorSpace = C.VPX_CS_BT_709
	ColorSpaceSmpte170 ColorSpace = C.VPX_CS_SMPTE_170
	ColorSpaceSmpte240 ColorSpace = C.VPX_CS_SMPTE_240
	ColorSpaceBt2020   ColorSpace = C.VPX_CS_BT_2020
	ColorSpaceReserved ColorSpace = C.VPX_CS_RESERVED
	ColorSpaceSrgb     ColorSpace = C.VPX_CS_SRGB
)

// Vp8DecControlID as declared in vpx-1.5.0/vp8dx.h:66
type Vp8DecControlID uint

// Vp8DecControlID enumeration from vpx-1.5.0/vp8dx.h:66
const (
	Vp8dGetLastRefUpdates    = C.VP8D_GET_LAST_REF_UPDATES
	Vp8dGetFrameCorrupted    = C.VP8D_GET_FRAME_CORRUPTED
	Vp8dGetLastRefUsed       = C.VP8D_GET_LAST_REF_USED
	VpxdSetDecryptor         = C.VPXD_SET_DECRYPTOR
	Vp8dSetDecryptor         = C.VP8D_SET_DECRYPTOR
	Vp9dGetFrameSize         = C.VP9D_GET_FRAME_SIZE
	Vp9dGetDisplaySize       = C.VP9D_GET_DISPLAY_SIZE
	Vp9dGetBitDepth          = C.VP9D_GET_BIT_DEPTH
	Vp9SetByteAlignment      = C.VP9_SET_BYTE_ALIGNMENT
	Vp9InvertTileDecodeOrder = C.VP9_INVERT_TILE_DECODE_ORDER
	Vp9SetSkipLoopFilter     = C.VP9_SET_SKIP_LOOP_FILTER
	Vp8DecoderCtrlIDMax      = C.VP8_DECODER_CTRL_ID_MAX
)

// RefFrameType as declared in vpx-1.5.0/vp8.h:99
type RefFrameType uint

// RefFrameType enumeration from vpx-1.5.0/vp8.h:99
const (
	Vp8LastFrame RefFrameType = C.VP8_LAST_FRAME
	Vp8GoldFrame RefFrameType = C.VP8_GOLD_FRAME
	Vp8AltrFrame RefFrameType = C.VP8_ALTR_FRAME
)

// EncPass as declared in vpx-1.5.0/vpx_encoder.h:253
type EncPass uint

// EncPass enumeration from vpx-1.5.0/vpx_encoder.h:253
const (
	RcOnePass   = 0
	RcFirstPass = C.VPX_RC_FIRST_PASS
	RcLastPass  = C.VPX_RC_LAST_PASS
)

// KfMode as declared in vpx-1.5.0/vpx_encoder.h:277
type KfMode uint

// KfMode enumeration from vpx-1.5.0/vpx_encoder.h:277
const (
	KfFixed    = 0
	KfAuto     = C.VPX_KF_AUTO
	KfDisabled = C.VPX_KF_DISABLED
)

// CodecCxPktKind as declared in vpx-1.5.0/vpx_encoder.h:162
type CodecCxPktKind uint

// CodecCxPktKind enumeration from vpx-1.5.0/vpx_encoder.h:162
const (
	CodecCxFramePkt   = 0
	CodecStatsPkt     = C.VPX_CODEC_STATS_PKT
	CodecFpmbStatsPkt = C.VPX_CODEC_FPMB_STATS_PKT
	CodecPsnrPkt      = C.VPX_CODEC_PSNR_PKT
	CodecCustomPkt    = C.VPX_CODEC_CUSTOM_PKT
)

// Vp8eEncControlID as declared in vpx-1.5.0/vp8cx.h:143
type Vp8eEncControlID uint

// Vp8eEncControlID enumeration from vpx-1.5.0/vp8cx.h:143
const (
	Vp8eSetRoiMap                = C.VP8E_SET_ROI_MAP
	Vp8eSetActivemap             = C.VP8E_SET_ACTIVEMAP
	Vp8eSetScalemode             = C.VP8E_SET_SCALEMODE
	Vp8eSetCpuused               = C.VP8E_SET_CPUUSED
	Vp8eSetEnableautoaltref      = C.VP8E_SET_ENABLEAUTOALTREF
	Vp8eSetNoiseSensitivity      = C.VP8E_SET_NOISE_SENSITIVITY
	Vp8eSetSharpness             = C.VP8E_SET_SHARPNESS
	Vp8eSetStaticThreshold       = C.VP8E_SET_STATIC_THRESHOLD
	Vp8eSetTokenPartitions       = C.VP8E_SET_TOKEN_PARTITIONS
	Vp8eGetLastQuantizer         = C.VP8E_GET_LAST_QUANTIZER
	Vp8eGetLastQuantizer64       = C.VP8E_GET_LAST_QUANTIZER_64
	Vp8eSetArnrMaxframes         = C.VP8E_SET_ARNR_MAXFRAMES
	Vp8eSetArnrStrength          = C.VP8E_SET_ARNR_STRENGTH
	Vp8eSetArnrType              = C.VP8E_SET_ARNR_TYPE
	Vp8eSetTuning                = C.VP8E_SET_TUNING
	Vp8eSetCqLevel               = C.VP8E_SET_CQ_LEVEL
	Vp8eSetMaxIntraBitratePct    = C.VP8E_SET_MAX_INTRA_BITRATE_PCT
	Vp8eSetFrameFlags            = C.VP8E_SET_FRAME_FLAGS
	Vp9eSetMaxInterBitratePct    = C.VP9E_SET_MAX_INTER_BITRATE_PCT
	Vp9eSetGfCbrBoostPct         = C.VP9E_SET_GF_CBR_BOOST_PCT
	Vp8eSetTemporalLayerID       = C.VP8E_SET_TEMPORAL_LAYER_ID
	Vp8eSetScreenContentMode     = C.VP8E_SET_SCREEN_CONTENT_MODE
	Vp9eSetLossless              = C.VP9E_SET_LOSSLESS
	Vp9eSetTileColumns           = C.VP9E_SET_TILE_COLUMNS
	Vp9eSetTileRows              = C.VP9E_SET_TILE_ROWS
	Vp9eSetFrameParallelDecoding = C.VP9E_SET_FRAME_PARALLEL_DECODING
	Vp9eSetAqMode                = C.VP9E_SET_AQ_MODE
	Vp9eSetFramePeriodicBoost    = C.VP9E_SET_FRAME_PERIODIC_BOOST
	Vp9eSetNoiseSensitivity      = C.VP9E_SET_NOISE_SENSITIVITY
	Vp9eSetSvc                   = C.VP9E_SET_SVC
	Vp9eSetSvcParameters         = C.VP9E_SET_SVC_PARAMETERS
	Vp9eSetSvcLayerID            = C.VP9E_SET_SVC_LAYER_ID
	Vp9eSetTuneContent           = C.VP9E_SET_TUNE_CONTENT
	Vp9eGetSvcLayerID            = C.VP9E_GET_SVC_LAYER_ID
	Vp9eRegisterCxCallback       = C.VP9E_REGISTER_CX_CALLBACK
	Vp9eSetColorSpace            = C.VP9E_SET_COLOR_SPACE
	Vp9eSetTemporalLayeringMode  = C.VP9E_SET_TEMPORAL_LAYERING_MODE
	Vp9eSetMinGfInterval         = C.VP9E_SET_MIN_GF_INTERVAL
	Vp9eSetMaxGfInterval         = C.VP9E_SET_MAX_GF_INTERVAL
	Vp9eGetActivemap             = C.VP9E_GET_ACTIVEMAP
	Vp9eSetColorRange            = C.VP9E_SET_COLOR_RANGE
	Vp9eSetSvcRefFrameConfig     = C.VP9E_SET_SVC_REF_FRAME_CONFIG
	Vp9eSetRenderSize            = C.VP9E_SET_RENDER_SIZE
)

// ImageFormat as declared in vpx-1.5.0/vpx_image.h:67
type ImageFormat uint

// ImageFormat enumeration from vpx-1.5.0/vpx_image.h:67
const (
	ImageFormatNone     ImageFormat = 0
	ImageFormatRgb24    ImageFormat = C.VPX_IMG_FMT_RGB24
	ImageFormatRgb32    ImageFormat = C.VPX_IMG_FMT_RGB32
	ImageFormatRgb565   ImageFormat = C.VPX_IMG_FMT_RGB565
	ImageFormatRgb555   ImageFormat = C.VPX_IMG_FMT_RGB555
	ImageFormatUyvy     ImageFormat = C.VPX_IMG_FMT_UYVY
	ImageFormatYuy2     ImageFormat = C.VPX_IMG_FMT_YUY2
	ImageFormatYvyu     ImageFormat = C.VPX_IMG_FMT_YVYU
	ImageFormatBgr24    ImageFormat = C.VPX_IMG_FMT_BGR24
	ImageFormatRgb32Le  ImageFormat = C.VPX_IMG_FMT_RGB32_LE
	ImageFormatArgb     ImageFormat = C.VPX_IMG_FMT_ARGB
	ImageFormatArgbLe   ImageFormat = C.VPX_IMG_FMT_ARGB_LE
	ImageFormatRgb565Le ImageFormat = C.VPX_IMG_FMT_RGB565_LE
	ImageFormatRgb555Le ImageFormat = C.VPX_IMG_FMT_RGB555_LE
	ImageFormatYv12     ImageFormat = C.VPX_IMG_FMT_YV12
	ImageFormatI420     ImageFormat = C.VPX_IMG_FMT_I420
	ImageFormatVpxyv12  ImageFormat = C.VPX_IMG_FMT_VPXYV12
	ImageFormatVpxi420  ImageFormat = C.VPX_IMG_FMT_VPXI420
	ImageFormatI422     ImageFormat = C.VPX_IMG_FMT_I422
	ImageFormatI444     ImageFormat = C.VPX_IMG_FMT_I444
	ImageFormatI440     ImageFormat = C.VPX_IMG_FMT_I440
	ImageFormat444a     ImageFormat = C.VPX_IMG_FMT_444A
	ImageFormatI42016   ImageFormat = C.VPX_IMG_FMT_I42016
	ImageFormatI42216   ImageFormat = C.VPX_IMG_FMT_I42216
	ImageFormatI44416   ImageFormat = C.VPX_IMG_FMT_I44416
	ImageFormatI44016   ImageFormat = C.VPX_IMG_FMT_I44016
)

// Vp8PostprocLevel as declared in vpx-1.5.0/vp8.h:66
type Vp8PostprocLevel uint

// Vp8PostprocLevel enumeration from vpx-1.5.0/vp8.h:66
const (
	Vp8Nofiltering       = C.VP8_NOFILTERING
	Vp8Deblock           = C.VP8_DEBLOCK
	Vp8Demacroblock      = C.VP8_DEMACROBLOCK
	Vp8Addnoise          = C.VP8_ADDNOISE
	Vp8DebugTxtFrameInfo = C.VP8_DEBUG_TXT_FRAME_INFO
	Vp8DebugTxtMblkModes = C.VP8_DEBUG_TXT_MBLK_MODES
	Vp8DebugTxtDcDiff    = C.VP8_DEBUG_TXT_DC_DIFF
	Vp8DebugTxtRateInfo  = C.VP8_DEBUG_TXT_RATE_INFO
	Vp8Mfqe              = C.VP8_MFQE
)

// Vp8ComControlID as declared in vpx-1.5.0/vp8.h:44
type Vp8ComControlID uint

// Vp8ComControlID enumeration from vpx-1.5.0/vp8.h:44
const (
	Vp8SetReference        = C.VP8_SET_REFERENCE
	Vp8CopyReference       = C.VP8_COPY_REFERENCE
	Vp8SetPostproc         = C.VP8_SET_POSTPROC
	Vp8SetDbgColorRefFrame = C.VP8_SET_DBG_COLOR_REF_FRAME
	Vp8SetDbgColorMbModes  = C.VP8_SET_DBG_COLOR_MB_MODES
	Vp8SetDbgColorBModes   = C.VP8_SET_DBG_COLOR_B_MODES
	Vp8SetDbgDisplayMv     = C.VP8_SET_DBG_DISPLAY_MV
	Vp9GetReference        = C.VP9_GET_REFERENCE
	Vp8CommonCtrlIDMax     = C.VP8_COMMON_CTRL_ID_MAX
	Vp8DecoderCtrlIDStart  = C.VP8_DECODER_CTRL_ID_START
)

// Vp9eTemporalLayeringMode as declared in vpx-1.5.0/vp8cx.h:595
type Vp9eTemporalLayeringMode uint

// Vp9eTemporalLayeringMode enumeration from vpx-1.5.0/vp8cx.h:595
const (
	Vp9eTemporalLayeringModeNolayering Vp9eTemporalLayeringMode = C.VP9E_TEMPORAL_LAYERING_MODE_NOLAYERING
	Vp9eTemporalLayeringModeBypass     Vp9eTemporalLayeringMode = C.VP9E_TEMPORAL_LAYERING_MODE_BYPASS
	Vp9eTemporalLayeringMode0101       Vp9eTemporalLayeringMode = C.VP9E_TEMPORAL_LAYERING_MODE_0101
	Vp9eTemporalLayeringMode0212       Vp9eTemporalLayeringMode = C.VP9E_TEMPORAL_LAYERING_MODE_0212
)

// Vp8eTokenPartitions as declared in vpx-1.5.0/vp8cx.h:652
type Vp8eTokenPartitions uint

// Vp8eTokenPartitions enumeration from vpx-1.5.0/vp8cx.h:652
const (
	Vp8OneTokenpartition   Vp8eTokenPartitions = C.VP8_ONE_TOKENPARTITION
	Vp8TwoTokenpartition   Vp8eTokenPartitions = C.VP8_TWO_TOKENPARTITION
	Vp8FourTokenpartition  Vp8eTokenPartitions = C.VP8_FOUR_TOKENPARTITION
	Vp8EightTokenpartition Vp8eTokenPartitions = C.VP8_EIGHT_TOKENPARTITION
)

// Vp9eTuneContent as declared in vpx-1.5.0/vp8cx.h:659
type Vp9eTuneContent uint

// Vp9eTuneContent enumeration from vpx-1.5.0/vp8cx.h:659
const (
	Vp9eContentDefault Vp9eTuneContent = 0
	Vp9eContentScreen  Vp9eTuneContent = C.VP9E_CONTENT_SCREEN
	Vp9eContentInvalid Vp9eTuneContent = C.VP9E_CONTENT_INVALID
)

// Vp8eTuning as declared in vpx-1.5.0/vp8cx.h:669
type Vp8eTuning uint

// Vp8eTuning enumeration from vpx-1.5.0/vp8cx.h:669
const (
	Vp8TunePsnr Vp8eTuning = 0
	Vp8TuneSsim Vp8eTuning = C.VP8_TUNE_SSIM
)

// CodecErr as declared in vpx-1.5.0/vpx_codec.h:142
type CodecErr uint

// CodecErr enumeration from vpx-1.5.0/vpx_codec.h:142
const (
	CodecOk             CodecErr = 0
	CodecError          CodecErr = C.VPX_CODEC_ERROR
	CodecMemError       CodecErr = C.VPX_CODEC_MEM_ERROR
	CodecABIMismatch    CodecErr = C.VPX_CODEC_ABI_MISMATCH
	CodecIncapable      CodecErr = C.VPX_CODEC_INCAPABLE
	CodecUnsupBitstream CodecErr = C.VPX_CODEC_UNSUP_BITSTREAM
	CodecUnsupFeature   CodecErr = C.VPX_CODEC_UNSUP_FEATURE
	CodecCorruptFrame   CodecErr = C.VPX_CODEC_CORRUPT_FRAME
	CodecInvalidParam   CodecErr = C.VPX_CODEC_INVALID_PARAM
	CodecListEnd        CodecErr = C.VPX_CODEC_LIST_END
)
